<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mongo="http://www.springframework.org/schema/data/mongo"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/data/mongo http://www.springframework.org/schema/data/mongo/spring-mongo-1.1.xsd"
	default-autowire="byName">
	
	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:/mongo.properties</value>
				<value>classpath:/redis.properties</value>
				<value>classpath:/email.properties</value>
			</list>
		</property>
	</bean>
	
	<!-- spring data mongodb -->
	<mongo:mongo id="mongo" host="${mongo.url}" port="${mongo.port}">
		<mongo:options connections-per-host="${mongo.connectionsPerHost}"
			threads-allowed-to-block-for-connection-multiplier="${mongo.threadsAllowedToBlockForConnectionMultiplier}"
			connect-timeout="${mongo.connectTimeout}"
			max-wait-time="${mongo.maxWaitTime}"
			auto-connect-retry="${mongo.autoConnectRetry}"
			socket-keep-alive="${mongo.socketKeepAlive}"
			socket-timeout="${mongo.socketTimeout}"
			slave-ok="${mongo.slaveOk}"
			write-number="${mongo.writeNumber}"
			write-timeout="${mongo.writeTimeout}"
			write-fsync="${mongo.writeFsync}"/>
	</mongo:mongo>
	
	<mongo:db-factory id="mongoDbFactory" dbname="${mongo.dbname}" mongo-ref="mongo" username="${mongo.username}" password="${mongo.password}"/>

	<!-- <bean id="mongoTemplate" class="org.springframework.data.mongodb.core.MongoTemplate" >
			<constructor-arg name="mongoDbFactory" ref="mongoDbFactory" />
			<constructor-arg name="mongoConverter" ref="mappingConverter"/>
		</bean> -->
	<bean id="mongoTemplate" class="com.foxinmy.deimos.mongo.StandardMongoTemplate" >
		<constructor-arg name="mongoDbFactory" ref="mongoDbFactory" />
		<constructor-arg name="mongoConverter" ref="mappingConverter"/>
	</bean>
	
	<mongo:mapping-converter base-package="com.foxinmy.deimos.model" id="mappingConverter"/>
	
	<mongo:repositories base-package="com.foxinmy.deimos.dao" />
	
	<!-- jedis pool配置 -->
	<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<property name="maxActive" value="${redis.maxActive}" />
		<property name="maxIdle" value="${redis.maxIdle}" />
		<property name="maxWait" value="${redis.maxWait}" />
		<property name="testOnBorrow" value="${redis.testOnBorrow}" />
	</bean>
	<!-- jedis shardInfo配置 -->
		<bean id="jedisShardInfo" class="redis.clients.jedis.JedisShardInfo">
		<constructor-arg index="0" value="${redis.host}" />
		<constructor-arg index="1" value="${redis.port}" />
		<constructor-arg index="2" value="${redis.timeout}" />
		<constructor-arg index="3" value="${redis.default.db}" />
		<property name="password" value="${redis.pass}" />
	</bean>
	<!-- spring data redis -->
	<bean id="jedisConnectionFactory"
		class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
		<property name="usePool" value="true"/>
		<property name="hostName" value="${redis.host}" />
		<property name="port" value="${redis.port}" />
		<property name="password" value="${redis.pass}" />
		<property name="timeout" value="${redis.timeout}" />
		<property name="database" value="${redis.default.db}"/>
		<constructor-arg index="0" ref="jedisPoolConfig" />
	</bean>
	<!-- jedis -->
	<bean id="jedis" class="redis.clients.jedis.Jedis">
		<constructor-arg index="0" ref="jedisShardInfo" />
	</bean>
	<bean id="redisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate">
		<property name="connectionFactory" ref="jedisConnectionFactory" />
	</bean>
</beans>